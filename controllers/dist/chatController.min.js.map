{"version":3,"sources":["chatController.js"],"names":["Chat","require","askGemini","exports","createChat","req","res","prompt","response","chat","regeneratorRuntime","async","_context","prev","next","awrap","sent","create","userId","body","t0","status","json","msg","message","stop","getChats","chats","_context2","sort","createdAt","_context3","findOneAndDelete","_id","params","id"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,2BACCA,QAAQ,0BAAtBC,mBAAAA,UAERC,QAAQC,WAAa,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAFbX,EAIeG,EAJfH,KAAAA,OAEaU,EAAAE,KAAA,EAAAJ,mBAAAK,MAGMb,UAAUK,IAHhB,KAAA,EAAA,OAGXC,EAHWI,EAAAI,KAAAJ,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAf,KAAAiB,OAAA,CAAAC,OAAAb,EAAAa,OAAAX,OAAAA,EAAAC,SAAAA,KAAA,KAAA,EAAAC,EAAAG,EAAAI,KAETT,EAAAA,OAAAA,KAAWF,KAAIc,GAFNP,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAAAN,EAAAe,OAAA,KAAAC,KAAA,CAAAC,IAAAX,EAAAQ,GAAAI,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAZ,EAAAa,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAtB,QAAAuB,SAAA,SAAArB,EAAAC,GAAA,IAAAqB,EAAA,OAAAjB,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAAAJ,mBAAAK,MAMHG,KAAAA,KADiB,CAAAA,OAAAb,EAAAa,SAAAW,KAAA,CAAAC,WAAA,KALd,KAAA,EAMfZ,EANeU,EAAAZ,KAOfT,EAAAA,KAAAA,GAPeqB,EAAAd,KAAA,GAAA,MAAA,KAAA,EAAAc,EAAAf,KAAA,EAAAe,EAAAR,GAAAQ,EAAA,MAAA,GAKctB,EAAAe,OALd,KAAAC,KAAA,CAAAC,IAAAK,EAAAR,GAAAI,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAWjBnB,QAAAA,WAAW,SAAKgB,EAAKb,GAAV,OAAAC,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAXMf,KAAAgC,iBAAA,CAAAC,IAAA5B,EAAA6B,OAAAC,GAAAjB,OAAAb,EAAAa,UAWN,KAAA,EAkBXZ,EAAIgB,KAAK,CAAEC,IAAK,iBAlBLQ,EAAAjB,KAAA,EAAA,MAAA,KAAA,EAAAiB,EAAAlB,KAAA,EAAAkB,EAAAX,GAAAW,EAAA,MAAA,GAXMzB,EAAAe,OAAA,KAAAC,KAAA,CAAAC,IAAAQ,EAAAX,GAAAI,UAWN,KAAA,EAAA,IAAA,MAAA,OAAAO,EAAAN,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"chatController.min.js","sourcesContent":["const Chat = require('../models/Chat');\r\nconst { askGemini } = require('../gemini/geminiClient');\r\n\r\nexports.createChat = async (req, res) => {\r\n  try {\r\n    const { prompt } = req.body;\r\n    const response = await askGemini(prompt);\r\n\r\n    const chat = await Chat.create({\r\n      userId: req.userId,\r\n      prompt,\r\n      response\r\n    });\r\n\r\n    res.status(201).json(chat);\r\n  } catch (err) {\r\n    res.status(500).json({ msg: err.message });\r\n  }\r\n};\r\n\r\nexports.getChats = async (req, res) => {\r\n  try {\r\n    const chats = await Chat.find({ userId: req.userId }).sort({ createdAt: -1 });\r\n    res.json(chats);\r\n  } catch (err) {\r\n    res.status(500).json({ msg: err.message });\r\n  }\r\n};\r\n\r\nexports.deleteChat = async (req, res) => {\r\n  try {\r\n    await Chat.findOneAndDelete({ _id: req.params.id, userId: req.userId });\r\n    res.json({ msg: 'Chat deleted' });\r\n  } catch (err) {\r\n    res.status(500).json({ msg: err.message });\r\n  }\r\n};\r\n"]}