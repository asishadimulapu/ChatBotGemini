"use strict";var bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),User=require("../models/User");exports.register=function(r,s){var t,n,a,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.name,a=t.email,u=t.password,e.next=4,regeneratorRuntime.awrap(User.findOne({email:a}));case 4:if(e.sent)return e.abrupt("return",s.status(400).json({msg:"User already exists"}));e.next=7;break;case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.hash(u,10));case 9:return c=e.sent,e.next=12,regeneratorRuntime.awrap(User.create({name:n,email:a,password:c}));case 12:e.sent,s.status(201).json({msg:"User registered successfully"}),e.next=19;break;case 16:e.prev=16,e.t0=e.catch(0),s.status(500).json({msg:e.t0.message});case 19:case"end":return e.stop()}},null,null,[[0,16]])},exports.login=function(r,s){var t,n,a,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.email,a=t.password,e.next=4,regeneratorRuntime.awrap(User.findOne({email:n}));case 4:if(u=e.sent){e.next=7;break}return e.abrupt("return",s.status(400).json({msg:"Invalid credentials"}));case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.compare(a,u.password));case 9:if(e.sent){e.next=12;break}return e.abrupt("return",s.status(400).json({msg:"Invalid credentials"}));case 12:c=jwt.sign({userId:u._id},process.env.JWT_SECRET),s.json({token:c,user:{id:u._id,name:u.name}}),e.next=19;break;case 16:e.prev=16,e.t0=e.catch(0),s.status(500).json({msg:e.t0.message});case 19:case"end":return e.stop()}},null,null,[[0,16]])};
//# sourceMappingURL=authController.min.js.map
