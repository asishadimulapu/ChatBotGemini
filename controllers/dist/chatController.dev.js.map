{"version":3,"sources":["chatController.js"],"names":["Chat","require","askGemini","exports","createChat","req","res","prompt","body","response","create","userId","chat","status","json","msg","message","getChats","find","sort","createdAt","chats","deleteChat","findOneAndDelete","_id","params","id"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;eACsBA,OAAO,CAAC,wBAAD,C;IAArBC,S,YAAAA,S;;AAERC,OAAO,CAACC,UAAR,GAAqB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,UAAAA,MAFS,GAEEF,GAAG,CAACG,IAFN,CAETD,MAFS;AAAA;AAAA,0CAGML,SAAS,CAACK,MAAD,CAHf;;AAAA;AAGXE,UAAAA,QAHW;AAAA;AAAA,0CAKET,IAAI,CAACU,MAAL,CAAY;AAC7BC,YAAAA,MAAM,EAAEN,GAAG,CAACM,MADiB;AAE7BJ,YAAAA,MAAM,EAANA,MAF6B;AAG7BE,YAAAA,QAAQ,EAARA;AAH6B,WAAZ,CALF;;AAAA;AAKXG,UAAAA,IALW;AAWjBN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB;AAXiB;AAAA;;AAAA;AAAA;AAAA;AAajBN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,GAAG,EAAE,YAAIC;AAAX,WAArB;;AAbiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAiBAb,OAAO,CAACc,QAAR,GAAmB,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEKN,IAAI,CAACkB,IAAL,CAAU;AAAEP,YAAAA,MAAM,EAAEN,GAAG,CAACM;AAAd,WAAV,EAAkCQ,IAAlC,CAAuC;AAAEC,YAAAA,SAAS,EAAE,CAAC;AAAd,WAAvC,CAFL;;AAAA;AAETC,UAAAA,KAFS;AAGff,UAAAA,GAAG,CAACQ,IAAJ,CAASO,KAAT;AAHe;AAAA;;AAAA;AAAA;AAAA;AAKff,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,GAAG,EAAE,aAAIC;AAAX,WAArB;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AASAb,OAAO,CAACmB,UAAR,GAAqB,kBAAOjB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEXN,IAAI,CAACuB,gBAAL,CAAsB;AAAEC,YAAAA,GAAG,EAAEnB,GAAG,CAACoB,MAAJ,CAAWC,EAAlB;AAAsBf,YAAAA,MAAM,EAAEN,GAAG,CAACM;AAAlC,WAAtB,CAFW;;AAAA;AAGjBL,UAAAA,GAAG,CAACQ,IAAJ,CAAS;AAAEC,YAAAA,GAAG,EAAE;AAAP,WAAT;AAHiB;AAAA;;AAAA;AAAA;AAAA;AAKjBT,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,GAAG,EAAE,aAAIC;AAAX,WAArB;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["const Chat = require('../models/Chat');\r\nconst { askGemini } = require('../gemini/geminiClient');\r\n\r\nexports.createChat = async (req, res) => {\r\n  try {\r\n    const { prompt } = req.body;\r\n    const response = await askGemini(prompt);\r\n\r\n    const chat = await Chat.create({\r\n      userId: req.userId,\r\n      prompt,\r\n      response\r\n    });\r\n\r\n    res.status(201).json(chat);\r\n  } catch (err) {\r\n    res.status(500).json({ msg: err.message });\r\n  }\r\n};\r\n\r\nexports.getChats = async (req, res) => {\r\n  try {\r\n    const chats = await Chat.find({ userId: req.userId }).sort({ createdAt: -1 });\r\n    res.json(chats);\r\n  } catch (err) {\r\n    res.status(500).json({ msg: err.message });\r\n  }\r\n};\r\n\r\nexports.deleteChat = async (req, res) => {\r\n  try {\r\n    await Chat.findOneAndDelete({ _id: req.params.id, userId: req.userId });\r\n    res.json({ msg: 'Chat deleted' });\r\n  } catch (err) {\r\n    res.status(500).json({ msg: err.message });\r\n  }\r\n};\r\n"],"file":"chatController.dev.js"}