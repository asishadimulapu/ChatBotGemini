{"version":3,"sources":["geminiClient.js"],"names":["Chat","require","askGemini","exports","createChat","req","res","prompt","response","newChat","regeneratorRuntime","async","_context","prev","next","abrupt","status","json","message","awrap","sent","create","userId","_id","t0","console","error","stop"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,2BACCA,QAAQ,0BAAtBC,mBAAAA,UAERC,QAAQC,WAAa,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAF,EAAAC,KAAA,EAFbX,EAIeG,EAJfH,KAAAA,OAEa,CAAAU,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAG,OAAA,SAAAT,EAAAU,OAAA,KAAAC,KAAA,CAAAC,QAAA,wBAAA,KAAA,EAAA,OAAAN,EAAAE,KAAA,EAAAJ,mBAAAS,MAAAjB,UAAAK,IAAA,KAAA,EAAA,OAAAC,EAAAI,EAAAQ,KAAAR,EAAAE,KAAA,EAAAJ,mBAAAS,MAYKnB,KAAKqB,OAAO,CAZjBC,OAIZf,EAAAA,KAJYgB,IAAAhB,OAAAA,EAAAC,SAAAA,KAAA,KAAA,EAYXC,EAZWG,EAAAQ,KAAAd,EAAAU,OAAA,KAAAC,KAAAR,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,MAAA,GAKaa,QALbC,MAAA,oBAAAd,EAAAY,GAAAN,SAqBjBZ,EAAIU,OAAO,KAAKC,KAAK,CAAEC,QAASN,EAAAY,GAAMN,SAAW,2BArBhC,KAAA,GAAA,IAAA,MAAA,OAAAN,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"geminiClient.min.js","sourcesContent":["const Chat = require('../models/Chat');\r\nconst { askGemini } = require('../gemini/geminiClient');\r\n\r\nexports.createChat = async (req, res) => {\r\n  try {\r\n    const { prompt } = req.body;\r\n\r\n    if (!prompt) {\r\n      return res.status(400).json({ message: 'Prompt is required' });\r\n    }\r\n\r\n    // Get response from Gemini\r\n    const response = await askGemini(prompt);\r\n\r\n    // Save to DB\r\n    const newChat = await Chat.create({\r\n      userId: req.user._id,\r\n      prompt,\r\n      response,\r\n    });\r\n\r\n    res.status(201).json(newChat);  // âœ… send full chat back to frontend\r\n  } catch (error) {\r\n    console.error('createChat error:', error.message);\r\n    res.status(500).json({ message: error.message || 'Failed to process chat' });\r\n  }\r\n};\r\n"]}